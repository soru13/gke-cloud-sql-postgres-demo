gcloud iam service-accounts create mysql-paixus-sa --display-name postgres-paixus-sa

mysql-paixus-sa@paixus.iam.gserviceaccount.com


gcloud projects add-iam-policy-binding paixus \
--member serviceAccount:mysql-paixus-sa@paixus.iam.gserviceaccount.com \
--role roles/cloudsql.client > /dev/null


gcloud iam service-accounts keys create credentials-ghost.json --iam-account mysql-paixus-sa@paixus.iam.gserviceaccount.com


kubectl --namespace production create secret generic cloudsql-instance-credentials \
--from-file=credentials-ghost.json=credentials-ghost.json


kubectl create secret generic cloudsql-instance-credentials 
--from-file=credentials.json=[PATH_TO_DOWNLOADED_JSON_SECRET]


kubectl --namespace production create secret generic cloudsql-db-credentials \
--from-literal=user=dbadmin \
--from-literal=password=7B%v%r376V^V;$8

kubectl create secret generic cloudsql-db-credentials 
--from-literal=username=proxyuser 
--from-literal=password=[PASSWORD]

gcloud sql instances describe paixus-ghost \
--format="value(connectionName)"

kubectl --namespace production create configmap connectionname-ghost \
--from-literal=connectionname-ghost=paixus:us-west2:paixus-ghost

kubectl --namespace production create secret generic mail-secrets \
--from-literal=mailuser=paixus \
--from-literal=mailpass=..pZ8vAymuu@DY2pM3rf


kubectl --namespace production create secret generic mail-secrets --from-literal=mailuser=paixus --from-literal=mailpass=..pZ8vAymuu@DY2pM3rf